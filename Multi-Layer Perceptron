{"metadata":{"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Project: Multi-Layer Perceptron for Handwritten Digit Recognition using MNIST\n\n\n## Introduction\nIn this notebook, aim of this project is to build an MLP for handwritten digit classification using the MNIST dataset. We will use the PyTorch framework to build and train the MLP model. In a separate notebook, we will also implement the LeNet architecture and compare its performance agains the MLP's both in their accuracy and robustness, as well as their translation invariance properties.\n\nWe will begin by importing the necessary packages and frameworks.","metadata":{}},{"cell_type":"markdown","source":"## Import Libraries and Packages","metadata":{}},{"cell_type":"code","source":"import numpy                \nimport matplotlib.pyplot    \nimport pandas as pd\nimport torch          \nimport torch.nn as nn\nimport torch.optim as optim\nfrom torch.utils.data import DataLoader","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Import Dataset","metadata":{}},{"cell_type":"markdown","source":"## Explanatory Data Analysis (EDA)","metadata":{}},{"cell_type":"markdown","source":"## Preprocessing","metadata":{}},{"cell_type":"markdown","source":"## MLP Architecture","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}}]}